//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpotifyMVC.ServiceReferenceProject {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceProject.ITestService")]
    public interface ITestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchTracks", ReplyAction="http://tempuri.org/ITestService/SearchTracksResponse")]
        ServiceProject.Models.Item[] SearchTracks(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchTracks", ReplyAction="http://tempuri.org/ITestService/SearchTracksResponse")]
        System.Threading.Tasks.Task<ServiceProject.Models.Item[]> SearchTracksAsync(string query);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceChannel : SpotifyMVC.ServiceReferenceProject.ITestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceClient : System.ServiceModel.ClientBase<SpotifyMVC.ServiceReferenceProject.ITestService>, SpotifyMVC.ServiceReferenceProject.ITestService {
        
        public TestServiceClient() {
        }
        
        public TestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceProject.Models.Item[] SearchTracks(string query) {
            return base.Channel.SearchTracks(query);
        }
        
        public System.Threading.Tasks.Task<ServiceProject.Models.Item[]> SearchTracksAsync(string query) {
            return base.Channel.SearchTracksAsync(query);
        }
    }
}
